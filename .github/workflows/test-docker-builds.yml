name: Test Docker Builds

on:
  workflow_dispatch: # Manual trigger only
  pull_request:
    paths:
      - '**/Dockerfile'
      - '.github/workflows/test-docker-builds.yml'

jobs:
  test-builds:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
          - name: frontend  
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
          - name: database
            context: ./database
            dockerfile: ./database/Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test build ${{ matrix.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: false # Don't push, just test build
          tags: collabnext-${{ matrix.name }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test image ${{ matrix.name }}
        run: |
          # Test that the image was built successfully
          docker images | grep collabnext-${{ matrix.name }}
          
          # Basic smoke test for each image type
          case "${{ matrix.name }}" in
            "backend")
              echo "Testing Flask backend..."
              docker run --rm collabnext-${{ matrix.name }}:test python -c "import flask; print('✅ Flask import successful')"
              ;;
            "frontend")
              echo "Testing Nginx frontend..."
              docker run --rm collabnext-${{ matrix.name }}:test nginx -t
              echo "✅ Nginx config test successful"
              ;;
            "database")
              echo "Testing PostgreSQL database..."
              docker run --rm collabnext-${{ matrix.name }}:test postgres --version
              echo "✅ PostgreSQL version check successful"
              ;;
          esac 